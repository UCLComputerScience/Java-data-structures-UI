


print("------------------------Quick Sort-------------------")
print("Quick time: ", quickTime)
print("Quick Compare: ", quickComparisons)
print("Quick Swaps: ", quickSwaps)
print("------------------------Heap Sort------------------- ")
print("Heap Time: ", heapTime)
print("Heap Compare: ", heapCompare)
print("Heap Swaps: ", heapSwaps)

xNew = np.linspace(inputSize[0], inputSize[4],200)
yQuickNew = spline(inputSize,quickTimeList,xNew)
yHeapNew = spline(inputSize,heapTimeList,xNew)
plt.plot(xNew,yQuickNew, label = "Quick Sort")
plt.plot(xNew,yHeapNew, label = "Heap Sort")
plt.legend()
plt.ylabel('Time Taken')
plt.xlabel('Input Size')
plt.grid()
plt.show()


plt.plot(sizeLabels,quickTimeList, label = " Qucik Sort")
plt.plot(sizeLabels,heapTimeList, label = "Heap Sort")
plt.ylabel('Time Taken')
plt.xlabel('Input Size')
plt.legend()
plt.grid()
plt.show()



for i in range (7):
  arr = np.random.randint(0,inputSize[i],inputSize[i])
  n = len(arr) 
  quickStart = time.time()
  heapCompare, heapSwaps = heapSort(arr)
  quickEnd = time.time()
  heapStart = time.time()
  quickComparisons, quickSwaps = quicksort(arr,0,n-1) 
  heapEnd = time.time()
  quickTime = quickEnd - quickStart
  quickTimeList.append(quickTime)
  heapTime = heapEnd - heapStart
  heapTimeList.append(heapTime)
  heapTotalCompareAndSwaps = heapCompare + heapSwaps
  quickTotalCompareAndSwaps = quickComparisons + quickSwaps
  heapCompareAndSwapsList.append(heapTotalCompareAndSwaps)
  quickCompareAndSwapsList.append(quickTotalCompareAndSwaps)
# plt.title("Time taken in seconds")
# plt.plot(sizeLabels,quickTimeList, label = " Qucik Sort")
# plt.plot(sizeLabels,heapTimeList, label = "Heap Sort")
# plt.ylabel('Time Taken')
# plt.xlabel('Input Size')
# plt.legend()
# plt.grid()
# plt.show()

# plt.title("Total Comparisons and Swaps")
# plt.plot(sizeLabels,heapCompareAndSwapsList,label = "Heap Sort")
# plt.plot(sizeLabels,quickCompareAndSwapsList,label = "Quick Sort")
# plt.ylabel("Average Comparisons and Swaps")
# plt.xlabel("Input Size")
# plt.legend()
# plt.grid()
# plt.show()
df = pd.DataFrame({ 'Quick total time': quickTimeList,
                  'Heap total time': heapTimeList,
                  'Quick C&S': quickCompareAndSwapsList,
                  'Heap C&S': heapCompareAndSwapsList })
writer = pd.ExcelWriter('pandas_simple10.xlsx', engine='xlsxwriter')
df.to_excel(writer, sheet_name='run1')
writer.save()